{"mappings":"AAAA,SAAAA,kBAAAC,EAAAC,I,o8BAAC,WACG,IAAMC,EAAO,CACTC,aAAcC,SAASC,cAAc,wBACrCC,cAAeF,SAASC,cAAc,qBACtCE,MAAOH,SAASC,cAAc,wBAC9BG,KAAMJ,SAASC,cAAc,QAC7BI,KAAML,SAASC,cAAc,qBAC7BK,aAAcN,SAASC,cAAc,yBACrCM,WAAaP,SAASQ,uBAAuB,iBAQjD,SAASC,IAELX,EAAKM,KAAKM,UAAUC,OAAO,aAC3BC,IAEG,YAAYC,KAAKf,EAAKK,MAAMO,UAAUI,QACrCC,QAAQC,IAAI,kBACZlB,EAAKK,MAAMO,UAAUO,OAAO,aAC5BnB,EAAKO,KAAKK,UAAUQ,IAAI,oBAAoB,mBAC5CpB,EAAKK,MAAMO,UAAUQ,IAAI,oBAAoB,oBAGzC,WAAWL,KAAKf,EAAKK,MAAMO,UAAUI,SACzChB,EAAKO,KAAKK,UAAUO,OAAO,mBAC3BnB,EAAKO,KAAKK,UAAUQ,IAAI,oBAAoB,oBAC5CpB,EAAKK,MAAMO,UAAUQ,IAAI,oBAAoB,oBAC7CC,WAAWC,EAAgB,K,CAMnC,SAASA,IACLtB,EAAKK,MAAMO,UAAUQ,IAAI,aACzBpB,EAAKO,KAAKK,UAAUO,OAAO,oBAAoB,mBAAmB,mBAClEnB,EAAKK,MAAMO,UAAUO,OAAO,oBAAoB,mBAAmB,kB,CA9BvEnB,EAAKC,aAAasB,iBAAiB,QAASZ,GAC5CX,EAAKI,cAAcmB,iBAAiB,QAASZ,GAgC7C,IAAMG,EAAc,WAEfU,mBAAGxB,EAAKS,YAAYgB,SAAQ,SAAAC,GACzBA,EAAKd,UAAUO,OAAO,QAAS,oBAAqB,iBACpDO,EAAKV,MAAQ,I,IAGjBhB,EAAKQ,aAAaI,UAAUO,OAAO,S,EAuDvC,IAAMQ,EAAc,SAACC,GACjBA,EAAEC,iBAtBN,SAA8BC,GAI1B,IAFA,IAAIC,GAAa,EAERC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IAAK,CACxC,IAAIE,EAAQJ,EAAOE,GAEA,UAAfE,EAAMC,OAENlB,QAAQC,IAAI,6DAA6DH,KAAKmB,EAAMlB,SACpFe,EAAa,6DAA6DhB,KAAKmB,EAAMlB,SAEjFkB,EAAMtB,UAAUO,OAAO,QAAS,oBAAqB,iB,CAK7D,OAAOY,C,CAMWK,CAAsBZ,mBAAGxB,EAAKS,cAE5CT,EAAKQ,aAAaI,UAAUQ,IAAI,S,EAIxCpB,EAAKQ,aAAae,iBAAiB,SA5DhB,WAIf,IAFA,IAAIc,GAAU,EAELL,EAAI,EAAGA,EAAIhC,EAAKS,WAAWwB,OAAQD,IAAK,CAC7C,IAAIN,EAAO1B,EAAKS,WAAWuB,GAC3BN,EAAKd,UAAUO,OAAO,QAAS,oBAAqB,iBAEpD,IAAImB,EAAe,6DAA6DvB,KAAKW,EAAKV,OAG1F,IAFkB,cAAcD,KAAKW,EAAKV,QAET,QAAbU,EAAKS,KAAe,CACpCT,EAAKd,UAAUQ,IAAI,QAAS,oBAAqB,iBACjD,K,CAGJ,IAAIkB,GAA6B,SAAbZ,EAAKS,KAAgB,CACrCT,EAAKd,UAAUQ,IAAI,QAAS,oBAAqB,iBACjD,K,CAGAY,IAAMhC,EAAKS,WAAWwB,OAAS,IAC/BI,GAAU,IAGE,IAAZA,GACA1B,G,KAmCZX,EAAKO,KAAKgB,iBAAiB,SAAQ,SAACK,G,OAAMD,EAAYC,E,GACzD,CApHA","sources":["src/js/subscribe-modal.js"],"sourcesContent":["(() => {\n    const refs = {\n        openModalBtn: document.querySelector('.blog__btn-subscribe'),\n        closeModalBtn: document.querySelector('.modal__btn-close'),\n        modal: document.querySelector('.backdrop__subscribe'),\n        body: document.querySelector('body'),\n        form: document.querySelector('.modal__subscribe'),\n        subscribeBtn: document.querySelector('.modal__btn-subscribe'),\n        inputElems : document.getElementsByClassName('modal__input'),\n    }\n\n    refs.openModalBtn.addEventListener(\"click\", subscribeModal);\n    refs.closeModalBtn.addEventListener(\"click\", subscribeModal);\n    \n\n\n    function subscribeModal() {        \n        \n        refs.body.classList.toggle(\"no-scroll\");\n        clearInputs();\n\n        if(/is-hidden/.test(refs.modal.classList.value)){\n            console.log(\"hidden removed\")\n            refs.modal.classList.remove(\"is-hidden\");\n            refs.form.classList.add(\"animate__animated\",\"animate__zoomIn\");\n            refs.modal.classList.add(\"animate__animated\",\"animate__fadeIn\");\n            \n        }\n        else if(/animated/.test(refs.modal.classList.value)){\n            refs.form.classList.remove(\"animate__zoomIn\");\n            refs.form.classList.add(\"animate__animated\",\"animate__zoomOut\");\n            refs.modal.classList.add(\"animate__animated\",\"animate__fadeOut\");\n            setTimeout(removeAnimation,1000);\n        }\n        \n        \n    };\n\n    function removeAnimation(){\n        refs.modal.classList.add(\"is-hidden\");\n        refs.form.classList.remove(\"animate__animated\",\"animate__zoomOut\",\"animate__zoomIn\");\n        refs.modal.classList.remove(\"animate__animated\",\"animate__fadeOut\",\"animate__fadeIn\");\n    }\n\n    const clearInputs = () => {\n\n        [...refs.inputElems].forEach(elem => {\n            elem.classList.remove('error', 'animate__animated', 'animate__tada');\n            elem.value = null;\n        })\n\n        refs.subscribeBtn.classList.remove(\"active\");\n    }\n\n    const validation = () => {        \n        \n        let isValid = false;\n\n        for (let i = 0; i < refs.inputElems.length; i++) {\n            let elem = refs.inputElems[i];\n            elem.classList.remove('error', 'animate__animated', 'animate__tada');\n\n            let emailPattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(elem.value);\n            let textPattern = /[a-zA-Z0-9]/.test(elem.value);\n\n            if (!textPattern && elem.name == \"name\"){\n                elem.classList.add('error', 'animate__animated', 'animate__tada');                \n                break;\n            }\n\n            if(!emailPattern && elem.name == \"email\"){\n                elem.classList.add('error', 'animate__animated', 'animate__tada');                \n                break;\n            }\n            \n            if (i === refs.inputElems.length - 1) {\n                isValid = true;\n            }\n\n            if (isValid === true) {\n                subscribeModal();                \n            }\n        }\n    };\n\n    function validateInputByKeyUp(inputs){\n        \n        let validEmail = false;\n\n        for (let i = 0; i < inputs.length; i++) {\n        let input = inputs[i];\n        \n        if (input.name === \"email\") {\n            \n            console.log(/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(input.value));\n            validEmail = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(input.value);\n            if (validEmail) {\n                input.classList.remove('error', 'animate__animated', 'animate__tada');            \n            }         \n        }\n\n        }  \n        return validEmail ;\n    }\n\n\n    const sendSubForm = (e) =>{\n        e.preventDefault();\n        let checkValid  = validateInputByKeyUp([...refs.inputElems]);\n        if(checkValid){\n            refs.subscribeBtn.classList.add(\"active\");\n        }\n    }\n\n    refs.subscribeBtn.addEventListener(\"click\", validation);\n    refs.form.addEventListener(\"keyup\",(e) => sendSubForm(e));\n})();"],"names":["_arrayLikeToArray","arr","len","refs","openModalBtn","document","querySelector","closeModalBtn","modal","body","form","subscribeBtn","inputElems","getElementsByClassName","subscribeModal","classList","toggle","clearInputs","test","value","console","log","remove","add","setTimeout","removeAnimation","addEventListener","_toConsumableArray","forEach","elem","sendSubForm","e","preventDefault","inputs","validEmail","i","length","input","name","validateInputByKeyUp","isValid","emailPattern"],"version":3,"file":"index.bbda8b08.js.map"}