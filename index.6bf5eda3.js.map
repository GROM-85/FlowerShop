{"mappings":"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","sources":["src/js/modal-contact-us.js"],"sourcesContent":["(() => {\n  const refs = {\n      modal: document.querySelector(\"[data-modal]\"),  \n\n      openModalBtn: document.querySelector(\"[data-modal-open]\"),\n      heroBtn: document.querySelector('.hero__button'),\n      closeModalBtn: document.querySelector(\"[data-modal-close]\"),\n      \n      inputElems : document.getElementsByClassName('modal-contact-us__input'),\n      sendBtn : document.querySelector(\".modal-contact-us__btn\"),\n      formSend: document.querySelector(\".modal-contact-us__form\"),\n      modalSend: document.querySelector(\".modal-contact-us\"),\n      \n      modalThanks : document.querySelector('.modal-thank-you'),\n      continueBtn: document.querySelector('.modal-thank-you__btn'),\n      closeThanksBtn: document.querySelector('.modal-thank-you__btn-close'),\n      \n      body : document.querySelector('body'),   \n  }; \n    \n    \n\n  function toggleModal(obj) {\n      \n    obj.classList.toggle(\"is-hidden\");\n    console.log(obj.classList.value);\n    \n    if (obj.classList.value.startsWith(\"backdrop\")) {\n      refs.body.classList.toggle(\"no-scroll\")\n    }\n\n    if (/^modal-contact-us$/.test(refs.modalSend.classList.value)){\n      refs.modalSend.classList.add(\"animate__animated\",'animate__zoomIn');\n    }\n    else {\n      refs.modalSend.classList.remove(\"animate__animated\",'animate__zoomIn');\n    };\n\n    if(/modal-thank-you$/.test(refs.modalThanks.classList.value)){\n      refs.modalThanks.classList.add(\"animate__animated\",'animate__zoomIn');\n    }\n    else if(/is-hidden/.test(refs.modalThanks.classList.value)){\n      refs.modalThanks.classList.remove(\"animate__animated\",'animate__zoomIn');\n      refs.modalSend.classList.remove(\"is-hidden\");\n\n    }\n\n    \n    clearInputs();\n      \n  }\n\n  function removeAnimationContact(obj){\n    if(obj.classList.value){\n\n    }\n  }\n    \n    const clearInputs = () => {\n      [...refs.inputElems].forEach(elem => {\n          elem.classList.remove('error', 'animate__animated', 'animate__tada');\n          elem.value = null;\n      })\n      refs.sendBtn.classList.remove(\"active\");\n    }\n\n    const validationByBtn = () => {\n      let isValid = false;\n      for (let i = 0; i < refs.inputElems.length; i++) {\n          let elem = refs.inputElems[i];\n          elem.classList.remove('error', 'animate__animated', 'animate__tada');\n        \n        let emailPattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(elem.value);\n          let textPattern = /[a-zA-Z0-9]{5,}/.test(elem.value);\n          \n          if (!textPattern && elem.name == \"name\"){\n                elem.classList.add('error', 'animate__animated', 'animate__tada');                \n                break;\n            }\n\n            if(!emailPattern && elem.name == \"email\"){\n                elem.classList.add('error', 'animate__animated', 'animate__tada');                \n                break;\n            }\n            \n            if (i === refs.inputElems.length - 1) {\n                isValid = true;\n            }\n\n            if (isValid === true) {\n              toggleModal(refs.modalThanks);           \n              toggleModal(refs.modalSend);               \n            }\n      }\n  }\n\n  const validateInputs = (inputs) => {     \n    let validName = false;\n    let validEmail = false;\n\n    for (let i = 0; i < inputs.length; i++) {\n      let input = inputs[i];\n      \n      if (input.name === \"email\") {\n        \n          console.log(/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(input.value));\n          validEmail = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(input.value);\n          if (validEmail) {\n            input.classList.remove('error', 'animate__animated', 'animate__tada');            \n          }         \n      }\n\n      if (input.name === \"name\") {\n        \n          console.log(/[a-zA-Z0-9]{5,}/.test(input.value));\n          validName = /[a-zA-Z0-9]{5,}/.test(input.value);\n          if (validName) {\n            input.classList.remove('error', 'animate__animated', 'animate__tada');             \n          }              \n      }       \n    }  \n    return validEmail && validName;\n  }\n\n  const sendForm = (e) => {\n    e.preventDefault();    \n    let checkValid = validateInputs([...refs.inputElems]);\n    console.log(`Valid:${checkValid}`)\n    if (checkValid) {\n      refs.sendBtn.classList.add(\"active\");\n    }\n\n  }\n\n  refs.openModalBtn.addEventListener(\"click\", () => toggleModal(refs.modal));\n  refs.closeModalBtn.addEventListener(\"click\", () => toggleModal(refs.modal));\n  refs.heroBtn.addEventListener(\"click\", () => toggleModal(refs.modal));\n\n  // refs.closeThanksBtn.addEventListener(\"click\", () => toggleModal(refs.modal));\n  // refs.closeThanksBtn.addEventListener(\"click\", () => toggleModal(refs.modalThanks));\n  // refs.closeThanksBtn.addEventListener(\"click\", () => toggleModal(refs.modalSend));\n\n  refs.continueBtn.addEventListener(\"click\", () => toggleModal(refs.modal));\n  refs.continueBtn.addEventListener(\"click\", () => toggleModal(refs.modalThanks));\n  // refs.continueBtn.addEventListener(\"click\", () => toggleModal(refs.modalSend));\n\n  refs.sendBtn.addEventListener(\"click\", validationByBtn);\n  refs.formSend.addEventListener(\"keyup\", (e) => sendForm(e));\n\n  \n  \n\n  })();  \n  \n  "],"names":["_arrayLikeToArray","arr","len","refs","modal","document","querySelector","openModalBtn","heroBtn","closeModalBtn","inputElems","getElementsByClassName","sendBtn","formSend","modalSend","modalThanks","continueBtn","closeThanksBtn","body","toggleModal","obj","classList","toggle","console","log","value","startsWith","test","add","remove","clearInputs","_toConsumableArray","forEach","elem","sendForm","e","preventDefault","checkValid","inputs","validName","validEmail","i","length","input","name","validateInputs","concat","addEventListener","isValid","emailPattern"],"version":3,"file":"index.6bf5eda3.js.map"}